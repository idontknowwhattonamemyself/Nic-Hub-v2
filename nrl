local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Statue Hub", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local nf = false
_G.cs = 0
local nb = false
local Nofall = false

local NoBarriers = false
local kowner = false
local nstun = false

local FlySpeed = 0

local Tab = Window:MakeTab({
	Name = "Movement",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Novampburn = false
Tab:AddBind({
	Name = "Fly",
	Default = Enum.KeyCode.Z,
	Hold = false,
	Callback = function()
		getgenv().Toggled = not getgenv().Toggled
	end    
})
Tab:AddSlider({
	Name = "Fly Speed",
	
	Min = 0,
	Max = 225,
	Default = 32,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "FlySpeed",
	Callback = function(flyspeeed)
		 FlySpeed = flyspeeed
	end    
})

local Combat = Window:MakeTab({
	Name = "Combat",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Combat:AddToggle({
	Name = "No Vamp Burn",
	Default = false,
	 Save = true,
	Callback = function(Value)
		Novampburn = Value
	end    
})
Combat:AddToggle({
	Name = "No Fall Damage",
	Default = false,
	 Save = true,
	Callback = function(Value)
		Nofall = Value
	end    
})
Combat:AddToggle({
	Name = "Knocked Ownership",
	Default = false,
	 Save = true,
	Callback = function(Value)
		kowner = Value
	end    
})
Combat:AddToggle({
	Name = "No Fire",
	Default = false,
	 Save = true,
	Callback = function(Value)
		nstun = Value
	end    
})
local Misc = Window:MakeTab({
	Name = "Misc",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
Misc:AddToggle({
	Name = "No Fog",
	Default = false,
	 Save = true,
	Callback = function(Value)
		nf = Value
	end    
})

Misc:AddToggle({
	Name = "No Blind",
	Default = false,
	 Save = true,
	Callback = function(Value)
		nb = Value
	end    
})


Tab:AddSlider({
	Name = "Climb Multiplier",
	
	Min = 0,
	Max = 200,
	Default = 32,
	Color = Color3.fromRGB(255,255,255),
	Increment = 1,
	ValueName = "Times Climb Speed",
	Callback = function(cb)
		 _G.ClimbBoost = cb
	end    
})
Tab:AddToggle({
	Name = "No Orderly Barriers",
	Default = false,
	 Save = true,
	Callback = function(Value)
		NoBarriers = Value
	end    
})

game:GetService("RunService").RenderStepped:Connect(function()
if game:GetService("Players").LocalPlayer.Character and not game:GetService("Players").LocalPlayer.Character.Boosts:FindFirstChild("ClimbBoost") then
local cb = Instance.new('IntValue')
cb.Value = _G.ClimbBoost
cb.Name = "ClimbBoost"
cb.Parent = game:GetService("Players").LocalPlayer.Character.Boosts

elseif game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.Boosts:FindFirstChild("ClimbBoost")  then
    game:GetService("Players").LocalPlayer.Character.Boosts.ClimbBoost.Value = _G.ClimbBoost
end
end)
game:GetService("RunService").Heartbeat:Connect(function()
	for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do 
		if v.Name == "Burning" and nstun == true then
		local args = {
		[1] = 180,
		[2] = "normal"
	}
	
	game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.Dodge:FireServer(unpack(args))
	
	end
	end
	end)
local bar = Instance.new("Folder")
bar.Name = "Barriers"
bar.Parent = game:GetService("Workspace")
  for i, v in pairs(game:GetService("Workspace").Map:GetChildren()) do
			if v.Name == "OrderField" then
			    
				v.Parent = game:GetService("Workspace").Barriers
				end
        end
game:GetService("RunService").RenderStepped:Connect(function()
    if NoBarriers == true  then
        for i, v in pairs(game:GetService("Workspace").Barriers:GetChildren()) do
			if v.Name == "OrderField" then
			    
				v.Parent = game:GetService("Lighting")
				end
        end
    else
        for i, v in pairs(game:GetService("Lighting"):GetDescendants()) do
			if v.Name == "OrderField" then
			    
				v.Parent = game:GetService("Workspace").Barriers
				end
        end
        end
    end)




game:GetService("RunService").Heartbeat:Connect(function()
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("RagdollAttachment") and kowner == true then 
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("RagdollAttachment"):remove()
	end
end)
game:GetService("RunService").Heartbeat:Connect(function()
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("ConstraintJoint") and kowner == true then 
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("ConstraintJoint"):remove()
	end
end)

game:GetService("RunService").Heartbeat:Connect(function()
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Knocked") and kowner == true then 
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("Knocked"):remove()
	end
end)
game:GetService("RunService").Heartbeat:Connect(function()
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character:FindFirstChild("Unconscious") and kowner == true then 
		game:GetService("Players").LocalPlayer.Character:FindFirstChild("Unconscious"):remove()
	end
end)
game:GetService("RunService").Heartbeat:Connect(function()
	for i, v in pairs(game:GetService("Players").LocalPlayer.Character:GetChildren()) do 
		if v:FindFirstChild("Collision") and kowner == true then
			v:FindFirstChild("Collision"):remove()
	end
	end
	end)
getgenv().Toggled = false;
	local Player = game:GetService('Players').LocalPlayer;
	local Camera = workspace.Camera;

	local UIS = game:GetService("UserInputService")
	local holdingWKey = false
	local holdingSKey = false
	
	
	
	UIS.InputBegan:Connect(function(inputObject) 
		if(inputObject.KeyCode==Enum.KeyCode.W)then
			holdingWKey = true
	
		end
	end)
	
	UIS.InputEnded:Connect(function(inputObject)
		if(inputObject.KeyCode==Enum.KeyCode.W)then
			holdingWKey = false
		end
	end)
	
	
	UIS.InputBegan:Connect(function(inputObject) 
		if(inputObject.KeyCode==Enum.KeyCode.S)then
			holdingSKey = true
	
		end
	end)
	
	UIS.InputEnded:Connect(function(inputObject)
		if(inputObject.KeyCode==Enum.KeyCode.S)then
			holdingSKey = false
		end
	end)
	
	
		game:GetService'RunService'.RenderStepped:Connect(function()
		if nf == true then
		game:GetService("Lighting").FogEnd = 1409120811512095812985
				game:GetService("Lighting").FogStart = 1409120811512095812985

		end
end)
	
	game:GetService'RunService'.RenderStepped:Connect(function()
		if (getgenv().Toggled == true and Player.Character and Player.Character:FindFirstChild('HumanoidRootPart')) then
	if holdingWKey == true then
	Player.Character.HumanoidRootPart.Velocity = Camera.CFrame.LookVector * FlySpeed;
	end
	if holdingSKey == true then
	  Player.Character.HumanoidRootPart.Velocity = Camera.CFrame.LookVector * FlySpeed * -1;
	
	end
	
	if holdingSKey == false and holdingWKey == false then
		Player.Character.HumanoidRootPart.Velocity = Vector3.new(0,0,0)
	end
	end
	
	end)
	
	game:GetService'RunService'.RenderStepped:Connect(function()
		if (getgenv().Toggled == true and Player.Character and Player.Character:FindFirstChild('HumanoidRootPart')) then
			Player.Character.HumanoidRootPart.Velocity = Camera.CFrame.LookVector * FlySpeed;
		end;
	end)
game:GetService("RunService").RenderStepped:Connect(function()
if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.CharacterHandler and game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes and Nofall == true then
game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.FallDamage.Parent = game:GetService("StarterPlayer")
elseif game:GetService("StarterPlayer"):FindFirstChild("FallDamage") and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.CharacterHandler and game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes and  Nofall == false then
    game:GetService("StarterPlayer").FallDamage.Parent = game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes
    
end
end)
game:GetService("RunService").RenderStepped:Connect(function()
	if game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.CharacterHandler and game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes and game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes:FindFirstChild("SunBurn") and Novampburn == true then
		game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes.SunBurn.Parent = game:GetService("StarterPlayer")
	elseif game:GetService("StarterPlayer"):FindFirstChild("SunBurn") and game:GetService("Players").LocalPlayer.Character and game:GetService("Players").LocalPlayer.Character.CharacterHandler and game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes and  Nofall == false then
		game:GetService("StarterPlayer").SunBurn.Parent = game:GetService("Players").LocalPlayer.Character.CharacterHandler.Remotes
		
	end
	end)
game:GetService("RunService").RenderStepped:Connect(function()
if nb == true then
if game:GetService("Lighting").BagBlind then
    game:GetService("Lighting").BagBlind.Enabled = false
end
if game:GetService("Lighting").Blindness then
    game:GetService("Lighting").Blindness.Enabled = false
end
if game:GetService("Lighting").Concussion then
    game:GetService("Lighting").Concussion.Enabled = false
end
if  game:GetService("Lighting").Blur then
    game:GetService("Lighting").Blur.Enabled = false
end
if game:GetService("Lighting").Chokeout then
game:GetService("Lighting").Chokeout.Enabled = false
end

end
end)
OrionLib:Init()
